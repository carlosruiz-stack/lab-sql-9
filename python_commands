from sqlalchemy import create_engine
import pandas as pd
from getpass import getpass  # To get the password without showing the input

import matplotlib
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
#sns.set_theme(style="whitegrid")

from sklearn.metrics import confusion_matrix
from sklearn.metrics import plot_confusion_matrix
from sklearn.metrics import cohen_kappa_score

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

password = getpass("INSERT YOUR F*KING PASSWORD: ")

#establish connection with db

connection_string = 'mysql+pymysql://root:' + password + '@localhost/sakila'
engine = create_engine(connection_string)

#read the dataset

data = pd.read_sql_query('SELECT * FROM sakila.rental', engine)
data.head()

#store the information separately for rentals in each month

rental_may_df = pd.read_sql_query(
"""
SELECT customer_id, COUNT(*) AS num_of_rents_may
FROM rental_may
GROUP BY customer_id
ORDER BY num_of_rents_may DESC;
""", engine
)
rental_june_df.head()

rental_june_df = pd.read_sql_query(
"""
SELECT customer_id, COUNT(*) AS num_of_rents_june
FROM rental_june
GROUP BY customer_id
ORDER BY num_of_rents_june DESC;
""", engine
)
rental_june_df.head()

#Write a function that checks if customer borrowed more or less films in the month of June as compared to May.

Hint: For this part, you can create a join between the two dataframes created before, using the merge function available for pandas dataframes. 

may_june = rental_may.merge(rental_june, on="customer_id", how="inner")  
may_june.head()

